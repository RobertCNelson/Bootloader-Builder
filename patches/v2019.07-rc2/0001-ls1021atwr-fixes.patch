From ae05d371adcd9bbb5b34c7a6aafbb52851ea25c0 Mon Sep 17 00:00:00 2001
From: Robert Nelson <robertcnelson@gmail.com>
Date: Fri, 1 Feb 2019 16:48:03 -0600
Subject: [PATCH] ls1021atwr fixes

Signed-off-by: Robert Nelson <robertcnelson@gmail.com>
---
 include/configs/ls1021atwr.h | 164 +++++++----------------------------
 1 file changed, 32 insertions(+), 132 deletions(-)

diff --git a/include/configs/ls1021atwr.h b/include/configs/ls1021atwr.h
index 2c91ae783b..40b64aa5ab 100644
--- a/include/configs/ls1021atwr.h
+++ b/include/configs/ls1021atwr.h
@@ -313,148 +313,48 @@
 
 #define CONFIG_FSL_DEVICE_DISABLE
 
+#ifndef CONFIG_LOADADDR
+#define CONFIG_LOADADDR			0x82000000
+#endif
+
 #define BOOT_TARGET_DEVICES(func) \
-	func(MMC, mmc, 0) \
-	func(USB, usb, 0)
+	func(MMC, mmc, 0)
 #include <config_distro_bootcmd.h>
 
 #ifdef CONFIG_LPUART
 #define CONFIG_EXTRA_ENV_SETTINGS       \
-	"bootargs=root=/dev/ram0 rw console=ttyLP0,115200\0" \
-	"initrd_high=0xffffffff\0"      \
-	"fdt_high=0xffffffff\0"		\
-	"fdt_addr=0x64f00000\0"		\
-	"kernel_addr=0x65000000\0"	\
-	"scriptaddr=0x80000000\0"	\
-	"scripthdraddr=0x80080000\0"	\
-	"fdtheader_addr_r=0x80100000\0"	\
-	"kernelheader_addr_r=0x80200000\0"	\
-	"kernel_addr_r=0x81000000\0"	\
-	"fdt_addr_r=0x90000000\0"	\
-	"ramdisk_addr_r=0xa0000000\0"	\
-	"load_addr=0xa0000000\0"	\
-	"kernel_size=0x2800000\0"	\
-	"kernel_addr_sd=0x8000\0"	\
-	"kernel_size_sd=0x14000\0"	\
-	BOOTENV				\
-	"boot_scripts=ls1021atwr_boot.scr\0"	\
-	"boot_script_hdr=hdr_ls1021atwr_bs.out\0"	\
-		"scan_dev_for_boot_part="	\
-			"part list ${devtype} ${devnum} devplist; "	\
-			"env exists devplist || setenv devplist 1; "	\
-			"for distro_bootpart in ${devplist}; do "	\
-			"if fstype ${devtype} "				\
-				"${devnum}:${distro_bootpart} "		\
-				"bootfstype; then "			\
-				"run scan_dev_for_boot; "		\
-			"fi; "			\
-		"done\0"			\
-	"scan_dev_for_boot="				  \
-		"echo Scanning ${devtype} "		  \
-				"${devnum}:${distro_bootpart}...; "  \
-		"for prefix in ${boot_prefixes}; do "	  \
-			"run scan_dev_for_scripts; "	  \
-		"done;"					  \
-		"\0"					  \
-	"boot_a_script="				  \
-		"load ${devtype} ${devnum}:${distro_bootpart} "  \
-			"${scriptaddr} ${prefix}${script}; "    \
-		"env exists secureboot && load ${devtype} "     \
-			"${devnum}:${distro_bootpart} "		\
-			"${scripthdraddr} ${prefix}${boot_script_hdr} " \
-			"&& esbc_validate ${scripthdraddr};"    \
-		"source ${scriptaddr}\0"	  \
-	"installer=load mmc 0:2 $load_addr "	\
-		"/flex_installer_arm32.itb; "		\
-		"bootm $load_addr#ls1021atwr\0"	\
-	"qspi_bootcmd=echo Trying load from qspi..;"	\
-		"sf probe && sf read $load_addr "	\
-		"$kernel_addr $kernel_size && bootm $load_addr#$board\0"	\
-	"nor_bootcmd=echo Trying load from nor..;"	\
-		"cp.b $kernel_addr $load_addr "		\
-		"$kernel_size && bootm $load_addr#$board\0"
+	"console=ttyLP0,115200\0" \
+	"ftdfile=ls1021a-twr.dtb\0" \
+	"initrd_high=0xffffffff\0" \
+	"fdt_high=0xffffffff\0" \
+	"fdt_addr_r=0x8f000000\0" \
+	"fdt_addr=0x8f000000\0" \
+	"findfdt=setenv fdtfile ls1021a-twr.dtb; \0" \
+	"kernel_addr_r=" __stringify(CONFIG_LOADADDR) "\0" \
+	"pxefile_addr_r=" __stringify(CONFIG_LOADADDR) "\0" \
+	"scriptaddr=" __stringify(CONFIG_LOADADDR) "\0" \
+	BOOTENV
 #else
 #define CONFIG_EXTRA_ENV_SETTINGS	\
-	"bootargs=root=/dev/ram0 rw console=ttyS0,115200\0" \
-	"initrd_high=0xffffffff\0"      \
-	"fdt_high=0xffffffff\0"		\
-	"fdt_addr=0x64f00000\0"		\
-	"kernel_addr=0x61000000\0"	\
-	"kernelheader_addr=0x60800000\0"	\
-	"scriptaddr=0x80000000\0"	\
-	"scripthdraddr=0x80080000\0"	\
-	"fdtheader_addr_r=0x80100000\0"	\
-	"kernelheader_addr_r=0x80200000\0"	\
-	"kernel_addr_r=0x81000000\0"	\
-	"kernelheader_size=0x40000\0"	\
-	"fdt_addr_r=0x90000000\0"	\
-	"ramdisk_addr_r=0xa0000000\0"	\
-	"load_addr=0xa0000000\0"	\
-	"kernel_size=0x2800000\0"	\
-	"kernel_addr_sd=0x8000\0"	\
-	"kernel_size_sd=0x14000\0"	\
-	"kernelhdr_addr_sd=0x4000\0"		\
-	"kernelhdr_size_sd=0x10\0"		\
-	BOOTENV				\
-	"boot_scripts=ls1021atwr_boot.scr\0"	\
-	"boot_script_hdr=hdr_ls1021atwr_bs.out\0"	\
-		"scan_dev_for_boot_part="	\
-			"part list ${devtype} ${devnum} devplist; "	\
-			"env exists devplist || setenv devplist 1; "	\
-			"for distro_bootpart in ${devplist}; do "	\
-			"if fstype ${devtype} "				\
-				"${devnum}:${distro_bootpart} "		\
-				"bootfstype; then "			\
-				"run scan_dev_for_boot; "		\
-			"fi; "			\
-		"done\0"			\
-	"scan_dev_for_boot="				  \
-		"echo Scanning ${devtype} "		  \
-				"${devnum}:${distro_bootpart}...; "  \
-		"for prefix in ${boot_prefixes}; do "	  \
-			"run scan_dev_for_scripts; "	  \
-		"done;"					  \
-		"\0"					  \
-	"boot_a_script="				  \
-		"load ${devtype} ${devnum}:${distro_bootpart} "  \
-			"${scriptaddr} ${prefix}${script}; "    \
-		"env exists secureboot && load ${devtype} "     \
-			"${devnum}:${distro_bootpart} "		\
-			"${scripthdraddr} ${prefix}${boot_script_hdr} " \
-			"&& esbc_validate ${scripthdraddr};"    \
-		"source ${scriptaddr}\0"	  \
-	"qspi_bootcmd=echo Trying load from qspi..;"	\
-		"sf probe && sf read $load_addr "	\
-		"$kernel_addr $kernel_size; env exists secureboot "	\
-		"&& sf read $kernelheader_addr_r $kernelheader_addr "	\
-		"$kernelheader_size && esbc_validate ${kernelheader_addr_r}; " \
-		"bootm $load_addr#$board\0" \
-	"nor_bootcmd=echo Trying load from nor..;"	\
-		"cp.b $kernel_addr $load_addr "		\
-		"$kernel_size; env exists secureboot "	\
-		"&& cp.b $kernelheader_addr $kernelheader_addr_r "	\
-		"$kernelheader_size && esbc_validate ${kernelheader_addr_r}; " \
-		"bootm $load_addr#$board\0"	\
-	"sd_bootcmd=echo Trying load from SD ..;"       \
-		"mmcinfo && mmc read $load_addr "	\
-		"$kernel_addr_sd $kernel_size_sd && "	\
-		"env exists secureboot && mmc read $kernelheader_addr_r "		\
-		"$kernelhdr_addr_sd $kernelhdr_size_sd "		\
-		" && esbc_validate ${kernelheader_addr_r};"	\
-		"bootm $load_addr#$board\0"
+	"console=ttyS0,115200\0" \
+	"ftdfile=ls1021a-twr.dtb\0" \
+	"initrd_high=0xffffffff\0" \
+	"fdt_high=0xffffffff\0" \
+	"fdt_addr_r=0x8f000000\0" \
+	"fdt_addr=0x8f000000\0" \
+	"findfdt=setenv fdtfile ls1021a-twr.dtb; \0" \
+	"kernel_addr_r=" __stringify(CONFIG_LOADADDR) "\0" \
+	"pxefile_addr_r=" __stringify(CONFIG_LOADADDR) "\0" \
+	"scriptaddr=" __stringify(CONFIG_LOADADDR) "\0" \
+	BOOTENV
 #endif
 
 #undef CONFIG_BOOTCOMMAND
-#if defined(CONFIG_QSPI_BOOT) || defined(CONFIG_SD_BOOT_QSPI)
-#define CONFIG_BOOTCOMMAND "run distro_bootcmd; run qspi_bootcmd"	\
-			   "env exists secureboot && esbc_halt"
-#elif defined(CONFIG_SD_BOOT)
-#define CONFIG_BOOTCOMMAND "run distro_bootcmd; run sd_bootcmd; "	\
-			   "env exists secureboot && esbc_halt;"
-#else
-#define CONFIG_BOOTCOMMAND "run distro_bootcmd; run nor_bootcmd;"	\
-			   "env exists secureboot && esbc_halt;"
-#endif
+#define CONFIG_BOOTCOMMAND \
+	   "run findfdt; " \
+	   "run distro_bootcmd"
+
+#include <config_distro_bootcmd.h>
 
 /*
  * Miscellaneous configurable options
-- 
2.20.1

